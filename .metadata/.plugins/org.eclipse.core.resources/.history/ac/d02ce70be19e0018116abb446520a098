package com.prpl.controller;

import java.io.IOException;


import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.jboss.logging.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;

import com.prpl.controller.EmployeeController;

import com.prpl.model.Employee;
import com.prpl.service.ServiceDAO;


@Controller
public class EmployeeController {

	private static final Logger logger = Logger
			.getLogger(EmployeeController.class);

	public EmployeeController() {
		System.out.println("EmployeeController()");
	}

	//@Autowired
	//private ServiceDAO employeeService;
	
	
	
	
	   @Autowired  
	    ServiceDAO dao;
	      
	   
	    @RequestMapping("/empform")  
	    public ModelAndView showform(){  
	        return new ModelAndView("empform","command",new Employee());  
	    }  
	 
	    @RequestMapping(value="/save",method = RequestMethod.POST)  
	    public ModelAndView save(@ModelAttribute("emp") Employee emp){  
	        dao.addEmployee(emp); 
	        return new ModelAndView("redirect:/viewemp");
	    }  
	    
	    @RequestMapping("/viewemp")  
	    public ModelAndView viewemp(){  
	        List<Employee> list=dao.getAllEmployees();  
	        return new ModelAndView("viewemp","list",list);  
	    }  
	    
	    @RequestMapping(value="/editemp/{id}")  
	    public ModelAndView edit(@PathVariable int id){  
	        Employee emp=dao.getEmployee(id) ;
	        return new ModelAndView("empeditform","command",emp);  
	    }  
	    /* It updates model object. */  
	    @RequestMapping(value="/editsave",method = RequestMethod.POST)  
	    public ModelAndView editsave(@ModelAttribute("emp") Employee emp){  
	        dao.updateEmployee(emp) ;
	        return new ModelAndView("redirect:/viewemp");  
	    }  
	    /* It deletes record for the given id in URL and redirects to /viewemp */  
	    @RequestMapping(value="/deleteemp/{id}",method = RequestMethod.GET)  
	    public ModelAndView delete(@PathVariable int id){  
	        dao.deleteEmployee(id); 
	        return new ModelAndView("redirect:/viewemp");  
	    }  
	  
	}  
	 
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	

//	@RequestMapping(value = "/")
//	public ModelAndView listEmployee(ModelAndView model) throws IOException {
//		List<Employee> listEmployee = employeeService.getAllEmployees();
//		model.addObject("listEmployee", listEmployee);
//		model.setViewName("home");
//		return model;
//	}

//	@RequestMapping(value = "/newEmployee", method = RequestMethod.GET)
//	public ModelAndView newContact(ModelAndView model) {
//		Employee employee = new Employee();
//		model.addObject("employee", employee);
//		model.setViewName("EmployeeForm");
//		return model;
//	}
//
//	@RequestMapping(value = "/saveEmployee", method = RequestMethod.POST)
//	public ModelAndView saveEmployee(@ModelAttribute Employee employee) {
//		if (employee.getId() == 0) { // if employee id is 0 then creating the
//			// employee other updating the employee
//			employeeService.addEmployee(employee);
//		} else {
//			employeeService.updateEmployee(employee);
//		}
//		return new ModelAndView("redirect:/");
//	}
//
//	@RequestMapping(value = "/deleteEmployee", method = RequestMethod.GET)
//	public ModelAndView deleteEmployee(HttpServletRequest request) {
//		int employeeId = Integer.parseInt(request.getParameter("id"));
//		employeeService.deleteEmployee(employeeId);
//		return new ModelAndView("redirect:/");
//	}
//
//	@RequestMapping(value = "/editEmployee", method = RequestMethod.GET)
//	public ModelAndView editContact(HttpServletRequest request) {
//		int employeeId = Integer.parseInt(request.getParameter("id"));
//		Employee employee = employeeService.getEmployee(employeeId);
//		ModelAndView model = new ModelAndView("EmployeeForm");
//		model.addObject("employee", employee);
//
//		return model;
//	}

}